.\" Automatically generated by Pandoc 1.17.2
.\"
.TH "" "" "" "" ""
.hy
.PP
% SCDU User Guide
.PD 0
.P
.PD
% RVJ Callanan
.PD 0
.P
.PD
% 2017\-09\-05
.SH Terms of Use
.PP
Copyright (C) 2015\-2017 RVJ Callanan
.PP
SCDU is free software: you can redistribute it and/or modify
.PD 0
.P
.PD
it under the terms of the GNU General Public License as published by
.PD 0
.P
.PD
the Free Software Foundation, either version 3 of the License, or
.PD 0
.P
.PD
(at your option) any later version.
.PP
SCDU is distributed in the hope that it will be useful,
.PD 0
.P
.PD
but WITHOUT ANY WARRANTY; without even the implied warranty of
.PD 0
.P
.PD
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the
.PD 0
.P
.PD
GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License
.PD 0
.P
.PD
along with SCDU.
If not, see <http://www.gnu.org/licenses/>.
.SH Contributors
.PP
The SCDU Project recognises the contributions of the following
.PD 0
.P
.PD
individuals in the key areas of design, management, coding,
.PD 0
.P
.PD
testing, documentation and support:
.IP \[bu] 2
Shane Callanan, Carlow Institute of Technology
.IP \[bu] 2
Dennis Callanan, Maynooth University
.IP \[bu] 2
David Callanan, Gaelcholaiste Ceatharlach
.PP
Acknowledgements================
.PP
The SCDU Project acknowledges the following organisations and\\n
.PD 0
.P
.PD
individuals whose tools, frameworks and wider contributions have\\n
.PD 0
.P
.PD
helped bring our work to fruition:\\n
.IP \[bu] 2
Free Software Foundation\\n* GNU Project\\n* Pandoc (John McFarlane)\\n*
Skidoo\\n
.SH SCDU Help
.PP
SCDU (pronounced "skidoo") is a versatile command\-line toolkit for
.PD 0
.P
.PD
analysing, generating and manipulating data.
.PP
SCDU is freely distributed as a series of stand\-alone executables
.PD 0
.P
.PD
supporting a wide range of operating systems and CPU architectures.
.PD 0
.P
.PD
No installers are required; just copy the appropriate executable to a
.PD 0
.P
.PD
binary directory on the host or run directly from an external device
.PD 0
.P
.PD
such as a USB stick.
.PP
SCDU is designed from the ground up to pack as much functionality as
.PD 0
.P
.PD
possible into a compact binary with no external dependencies beyond a
.PD 0
.P
.PD
basic OS stack.
This means that it is equally at home in embedded
.PD 0
.P
.PD
devices, boot disks, virtual machines and high\-end server clusters.
.PP
SCDU is a veritable "Swiss Army Knife" for programmers, sysadmins and
.PD 0
.P
.PD
data forensics experts in the varied landscape of the Internet Age.
.PD 0
.P
.PD
It\[aq]s terse, platform\-agnostic and script\-friendly interface
maximises
.PD 0
.P
.PD
productivity without compromising performance and reliability.
These
.PD 0
.P
.PD
attributes also make SCDU the engine\-of\-choice for higher level data
.PD 0
.P
.PD
utilities and automation solutions
.PP
SCDU is also a useful educational tool for exploring file formats and
.PD 0
.P
.PD
data protocols.
.PP
SCDU is an acronym for "Super\-Consolidated Data Utility" while owing
.PD 0
.P
.PD
its speedy character to the timeless expression "23 Skidoo".
.SS General Usage
.PP
scdu [?] [action] [options] [parameters]
.PP
Inserting a \[aq]?\[aq] before any other argument invokes a "dummy run"
which
.PD 0
.P
.PD
recaps all options, environment variables and parameters that would
.PD 0
.P
.PD
have applied if the action had been executed.
.PP
If no arguments are supplied, the help action is invoked.
.SS Actions
.PP
scdu [?] copy [options]
.PD 0
.P
.PD
copies source files or directories to destination
.PP
scdu [?] help [options] [ ]
.PD 0
.P
.PD
provides general or specific help
.PP
scdu [?] info [options]
.PD 0
.P
.PD
provides useful information about the source
.PP
scdu [?] show [options] acks | authors | contribs | copyright | terms |
version
.PD 0
.P
.PD
outputs program information
.PP
scdu [?] view [options]
.PD 0
.P
.PD
displays source in human\-readable format
.SS Options
.PP
Options have consistent built\-in defaults which may be over\-ridden
.PD 0
.P
.PD
via the command\-line and/or config file (see \-cf option).
.PP
While both methods employ the same syntax, config file options are
.PD 0
.P
.PD
specified on separate lines which may also include comments and
.PD 0
.P
.PD
action declarations.
The intention is that built\-in defaults can be
.PD 0
.P
.PD
over\-ridden in the "global" section at the top of the config file
.PD 0
.P
.PD
and further customised in the action\-specific sections or on the
.PD 0
.P
.PD
command\-line itself.
.PP
Options are processed in the following order:
.IP "1." 3
Options specified on the command\-line BEFORE the \-cf option.
.IP "2." 3
Options specified in the config file global section.
.IP "3." 3
Options specified in the config file action\-specific section.
.IP "4." 3
Options specified on the command\-line AFTER the \-cf option.
.SS Option Types
.PP
Options can have one of the following types:
.PP
flag : 1 = enabled; 0 = disabled
.PD 0
.P
.PD
text : text string of arbitrary length
.PD 0
.P
.PD
inum : integer number of arbitrary size
.PD 0
.P
.PD
fnum : floating\-point number of arbitrary size and precision
.PD 0
.P
.PD
pick : selections using wildcards and/or letter combinations
.SS Option Syntax
.PP
Options can be specified using three methods:
.PP
long: \-\-[=] e.g.
\-\-progress\-width=120 \-\-recurse
.PD 0
.P
.PD
short: \-[=] e.g.
\-pw=120 \-r
.PD 0
.P
.PD
group: [+|~] e.g.
+rfap
.PP
Long syntax requires descriptive option names which are preferred in
.PD 0
.P
.PD
config files.
.PP
Short and group syntax requires abbreviated option symbols which are
.PD 0
.P
.PD
more suited to the command\-line where space is at a premium.
.PP
Group syntax can only be used with SINGLE character symbols which are
.PD 0
.P
.PD
reserved for the most ubiquituous FLAG options.
The group prefix
.PD 0
.P
.PD
determines whether the specified flags are enabled(+) or disabled(~).
.PP
Flag options are disabled by default and can be enabled by specifying
.PD 0
.P
.PD
the option name or symbol without a value.
Explicit values are only
.PD 0
.P
.PD
required when DISABLING a flag; however, explicit enabling may also
.PD 0
.P
.PD
be used to add emphasis if a flag was previously disabled.
.PP
Null values are assigned by appending the "=" sign to the option name
.PD 0
.P
.PD
or symbol without a value e.g.
\-rd=.
.PP
Text values can be assigned with or without quotes.
Quotes are only
.PD 0
.P
.PD
required when the text contains spaces e.g.
\-lf="my log file".
.PP
Config files support the following additional declarations:
.PP
\@ start of action\-specific section
.SH comment
.PP
Leading whitespace is ignored in config files, so indents may be used
.PD 0
.P
.PD
freely to assist readability.
.SS Options Index
.PP
Option: \-a \-\-all
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: general\-purpose flag e.g.
process all files
.PP
Option: \-f \-\-force
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: general purpose flag e.g.
force over\-writing
.PP
Option: \-p \-\-preserve
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: general purpose flag e.g.
preserve attributes
.PP
Option: \-r \-\-recurse
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: general purpose flag e.g.
include sub\-directories
.PP
Option: \-ap \-\-ascii\-path
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: for generic paths, use ascii instead of utf\-8 encoding
.PP
Option: \-at \-\-ascii\-text
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: for generic text, use ascii instead of utf\-8 encoding
.PP
Option: \-bp \-\-binary\-prefix
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: for generic quantities, use Ki(1024) instead of k(1000)
.PP
Option: \-bs \-\-buffer\-size
.PD 0
.P
.PD
Type: = [1 to 10Mi]
.PD 0
.P
.PD
Default: 1Ki
.PD 0
.P
.PD
Description: file buffer size, memory permitting (see \-cs option)
.PP
Option: \-cf \-\-config\-file
.PD 0
.P
.PD
Type: (optional)
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: alternative means of specifying command\-line options
.PP
Option: \-cs \-\-chunk\-size
.PD 0
.P
.PD
Type: = [512 to 10Mi] or [0]
.PD 0
.P
.PD
Default: 0
.PD 0
.P
.PD
Description: LCM of page sizes of accessible file systems (0 = auto)
.PP
Option: \-fd \-\-flush\-delay
.PD 0
.P
.PD
Type: = [1 to 100]
.PD 0
.P
.PD
Default: 50
.PD 0
.P
.PD
Description: minimum catch\-up time for slow stream flush
.PP
Option: \-ff \-\-flush\-factor
.PD 0
.P
.PD
Type: = [1 to 1000]
.PD 0
.P
.PD
Default: 10
.PD 0
.P
.PD
Description: additional catch\-up time for slow stream flush
.PP
Option: \-fl \-\-flush\-limit
.PD 0
.P
.PD
Type: = [100 to 10000]
.PD 0
.P
.PD
Default: 1000
.PD 0
.P
.PD
Description: maximum catch\-up time for slow stream flush
.PP
Option: \-fst \-\-fast\-streams
.PD 0
.P
.PD
Type: any or none from [sdl]
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: streams which do not require catch\-up time after flush
.PP
Option: \-lf \-\-log\-file
.PD 0
.P
.PD
Type: (required)
.PD 0
.P
.PD
Default: scdu.log
.PD 0
.P
.PD
Description: destination of logged channels (see \-rl and \-lm options)
.PP
Option: \-lm \-\-log\-mode
.PD 0
.P
.PD
Type: at most 1 selection from [AO]
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: = disabled; A = append; O = overwrite;
.PP
Option: \-ns \-\-newline\-std
.PD 0
.P
.PD
Type: 1 selection from [DWN]
.PD 0
.P
.PD
Default: D
.PD 0
.P
.PD
Description: Default; Windows(CRLF); Nix(LF)
.PP
Option: \-nd \-\-newline\-dgn
.PD 0
.P
.PD
Type: 1 selection from [DWN]
.PD 0
.P
.PD
Default: D
.PD 0
.P
.PD
Description: Default; Windows(CRLF); Nix(LF)
.PP
Option: \-nl \-\-newline\-log
.PD 0
.P
.PD
Type: 1 selection from [DWN]
.PD 0
.P
.PD
Default: D
.PD 0
.P
.PD
Description: Default; Windows(CRLF); Nix(LF)
.PP
Option: \-pf \-\-progress\-feed
.PD 0
.P
.PD
Type: any or none from [IUF]
.PD 0
.P
.PD
Default: IF
.PD 0
.P
.PD
Description: = never; Interrupts; Updates; Final
.PP
Option: \-pr \-\-progress\-rate
.PD 0
.P
.PD
Type: = [0.1 to 300.0]
.PD 0
.P
.PD
Default: 0.25
.PD 0
.P
.PD
Description: minimum time between progress updates
.PP
Option: \-ps \-\-progress\-stats
.PD 0
.P
.PD
Type: any or none from [PTURHIS]
.PD 0
.P
.PD
Default: PHIS
.PD 0
.P
.PD
Description: Percent; Time; Units; Rate; Hits; Item; Snip
.PP
Option: \-pw \-\-progress\-width
.PD 0
.P
.PD
Type: = [40 to 240]
.PD 0
.P
.PD
Default: 80
.PD 0
.P
.PD
Description: truncation width of progress updates
.PP
Option: \-rs \-\-route\-std
.PD 0
.P
.PD
Type: any or none from [CSARPIWEVDT]
.PD 0
.P
.PD
Default: R
.PD 0
.P
.PD
Description: channels routed to standard output (stdout)
.PP
Option: \-rd \-\-route\-dgn
.PD 0
.P
.PD
Type: any or none from [CSARPIWEVDT]
.PD 0
.P
.PD
Default: *\-R
.PD 0
.P
.PD
Description: channels routed to diagnostic output (stderr)
.PP
Option: \-rl \-\-route\-log
.PD 0
.P
.PD
Type: any or none from [CSARPIWEVDT]
.PD 0
.P
.PD
Default: *\-R
.PD 0
.P
.PD
Description: channels routed to log output (see \-lf and \-lm options)
.PP
Option: \-rm \-\-rate\-metric
.PD 0
.P
.PD
Type: 1 selection from [SMH]
.PD 0
.P
.PD
Default: M
.PD 0
.P
.PD
Description: generic rate output: per Second; Minute; Hour
.PP
Option: \-rr \-\-raw\-reporting
.PD 0
.P
.PD
Type:
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: show bare data in results and summary output
.PP
Option: \-ss \-\-summary\-stats
.PD 0
.P
.PD
Type: any or none from [AD]
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: Allocs; Duration;
.PP
Option: \-wd \-\-work\-directory
.PD 0
.P
.PD
Type: (optional)
.PD 0
.P
.PD
Default:
.PD 0
.P
.PD
Description: alternative working directory to calling process
.SS Channels
.PP
Program output is routed via channels which are selected using simple
.PD 0
.P
.PD
letter designations:
.PP
C : command : for generating program preamble and postable
.PD 0
.P
.PD
S : summary : for summarising program execution stats
.PD 0
.P
.PD
A : action : for indicating that the current action has started
.PD 0
.P
.PD
R : result : for generating action results
.PD 0
.P
.PD
P : progress : for tracking potentially long\-running actions
.PD 0
.P
.PD
I : info : for logging info
.PD 0
.P
.PD
W : warning : for logging warnings
.PD 0
.P
.PD
E : error : for logging errors
.PD 0
.P
.PD
V : verbose : for logging extra info that is occasionally useful
.PD 0
.P
.PD
D : debug : for logging extra info to assist debugging
.PD 0
.P
.PD
T : test : for logging temporary info during testing
.PP
Channel routing to output streams is controlled using the following
.PD 0
.P
.PD
options: \-rs \-rd \-rl.
.PP
Note: it is possible to route a given channel to more than one output
.PD 0
.P
.PD
stream simultaneously.
.SS Command Line Examples
.PP
scdu copy \-cf=scdu.cfg \-bs=100 myfile.dat mycopy.dat
.PD 0
.P
.PD
scdu help show
.PD 0
.P
.PD
scdu info \-rs=R \-rd= 192.168.1.1
.PD 0
.P
.PD
scdu show version
.PD 0
.P
.PD
scdu view myfile.dat
.SS Sample Config File
.SH scdu.cfg by Joe Bloggs
.SH global options
.IP
.nf
\f[C]
\-\-work\-directory=~/scdu
\-\-log\-file=default.log
\-\-log\-mode=A

\-\-progress\-width=120
\-\-progress\-stats=*
\-\-progress\-rate=1.0

\-\-ascii\-path
\-\-chunk\-size=1Mi
\-\-buffer\-size=1
\f[]
.fi
.SH action\-specific options
.PP
\@copy
.IP
.nf
\f[C]
#\ keep\ separate\ log\ and\ over\-write

\-\-log\-file=copy.log
\-\-log\-mode=O

\-\-buffer\-size=10
\-\-rate\-metric=S
\-\-progress\-rate=0.5
\-\-summary\-stats=D
\f[]
.fi
.PP
\@help
.IP
.nf
\f[C]
#\ just\ show\ help\ output\ and\ nothing\ else

\-\-route\-dgn=
\-\-route\-log=
\f[]
.fi
.SH end\-of\-file
.SS Signals
.PP
2 SIGINT : user interrupt (ctrl C)
.SS Exit Codes
.PP
0 XE_OK : success
.PD 0
.P
.PD
65 XE_UNKNOWN : unknown error
.PD 0
.P
.PD
66 XE_ABTERM : abnormal termination
.PD 0
.P
.PD
67 XE_UNKSIG : unknown signal
.PD 0
.P
.PD
68 XE_USRINT : user interrupt
.PD 0
.P
.PD
69 XE_MEMOUT : out of memory
.PD 0
.P
.PD
70 XE_STREAM : stream error
.PD 0
.P
.PD
71 XE_CMD : invalid command
.PD 0
.P
.PD
72 XE_CMDPRM : invalid command parameter
.PP
Positive exit codes from 1 to 63 are reserved for OS errors.
.PP
Negative exit codes usually indicate an abnormal termination or bug.
.PP
Please report suspected bugs to: GITHUB.
.PD 0
.P
.PD
A verbose log will assist debugging!
